{"version":3,"sources":["actions/types.js","actions/errorActions.js","actions/authActions.js","Components/Header/SideDrawer.js","Components/Header/Header.js","api/index.js","actions/urlActions.js","Components/Share/shareMenu.js","Components/Share/ShareComponents.js","Components/Form/Form.js","Components/Auth/RegisterUser.js","Components/Auth/LoggedInUser.js","Components/MyUrls/myUrls.js","images/blob-bg.jpg","Components/Home/Home.js","reducers/urlReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/userurlReducer.js","reducers/index.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","GET_ERRORS","CLEAR_ERRORS","returnErrors","msg","status","id","type","payload","baseURL","logout","tokenConfig","getState","token","auth","config","headers","useStyles","makeStyles","list","width","linkText","textDecoration","textTransform","color","button","marginTop","marginBottom","marginLeft","fontSize","SideDrawer","navLinks","anchor","classes","authState","useSelector","state","dispatch","useDispatch","history","useHistory","handleLogout","e","preventDefault","handleMyurls","push","handleHome","useState","right","setState","toggleDrawer","open","event","key","Typography","variant","IconButton","edge","onClick","Menu","style","Drawer","left","onOpen","onClose","className","role","onKeyDown","List","component","ListItem","Button","isAuthenticated","href","navbarDisplayFlex","display","justifyContent","navDisplayFlex","paddingTop","linkLogo","paddingLeft","buttonLarge","marginRight","buttonSmall","btn","Header","AppBar","position","elevation","Toolbar","Container","maxWidth","Hidden","smDown","Link","underline","smUp","API","axios","create","getUrlPost","a","get","data","console","log","getUserUrls","email","body","post","then","res","catch","err","BasicMenu","urls","ur","React","anchorEl","setAnchorEl","Boolean","Box","undefined","currentTarget","endIcon","icon","faCaretDown","MenuListProps","MenuItem","FacebookShareButton","url","shortenedUrl","ListItemIcon","flexDirection","FacebookIcon","round","size","pb","pl","WhatsappShareButton","WhatsappIcon","EmailShareButton","EmailIcon","TwitterShareButton","TwitterIcon","LinkedinShareButton","LinkedinIcon","ShareComponents","pt","Grid","container","spacing","p","alignItems","item","xs","startIcon","faShare","text","QRcode","toDataURL","fullWidth","window","location","reload","paper","borderRadius","textField","height","padding","minHeight","border","formContainer","backgroundColor","fontWeight","cursor","btnAccount","Form","full","postUrl","setPostUrl","showUrl","setShowUrl","isAuthenticatedState","userUrl","useEffect","user","lg","Paper","pr","TextField","label","value","onChange","target","ownedBy","validator","isURL","select","disabled","placeholder","map","option","newUrl","RegisterUser","name","setName","setEmail","password","setPassword","setMsg","errState","to","Alert","severity","JSON","stringify","response","register","LoggedInUser","LogIn","StyledTableCell","styled","TableCell","theme","tableCellClasses","head","palette","common","black","white","StyledTableRow","TableRow","action","hover","MemoisedMyUrls","memo","userUrls","TableContainer","Table","sx","minWidth","TableHead","align","TableBody","i","j","clicks","bg","backgroundImage","background","backgroundRepeat","backgroundSize","breakpoints","down","Home","exact","path","MyUrls","initialState","localStorage","getItem","isLoading","persistConfig","storage","whitelist","rootReducer","combineReducers","setItem","removeItem","persistReducer","store","createStore","reducers","compose","applyMiddleware","thunk","persistor","persistStore","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0263ecfa.chunk.js","sourcesContent":["export const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const FETCH_USER_URLS = \"FETCH_USER_URLS\"\r\nexport const CLEAR_DATA = \"CLEAR_DATA\"\r\n","import { GET_ERRORS,CLEAR_ERRORS } from \"./types\";\r\n\r\n//Return errors\r\n\r\nexport const returnErrors = (msg, status, id) => {\r\n    return{\r\n       type:GET_ERRORS,\r\n       payload:{\r\n           msg,status,id\r\n       } \r\n    }\r\n}\r\n\r\n//CLEAR ERRORS\r\nexport const clearErrors = () => {\r\n    return{\r\n        type:CLEAR_ERRORS\r\n    };\r\n};","import axios from 'axios';\r\nimport { returnErrors } from './errorActions';\r\nimport {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL\r\n} from './types';\r\n\r\nconst baseURL = \"https://urlshort-backend.herokuapp.com\"\r\n\r\n//check token and load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    // User loading\r\n    dispatch({ type: USER_LOADING });\r\n\r\n\r\n\r\n    axios.get(`${baseURL}/auth/getuser`, tokenConfig(getState))\r\n        .then(res => dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: AUTH_ERROR\r\n            })\r\n        })\r\n}\r\n//register users\r\nexport const register = ({ name, email, password }) => dispatch => {\r\n    //headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    //Request body\r\n    const body = JSON.stringify({ name, email, password });\r\n    axios.post(`${baseURL}/user`, body, config)\r\n        .then(res => dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\r\n            dispatch({\r\n                type: REGISTER_FAIL\r\n            })\r\n        })\r\n}\r\n\r\n//LogOut User\r\nexport const logout = () => {\r\n    return {\r\n        type: LOGOUT_SUCCESS\r\n    }\r\n}\r\n\r\n//Login Users\r\nexport const LogIn = ({ email, password }) => dispatch => {\r\n    //headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    //Request body\r\n    const body = JSON.stringify({ email, password });\r\n    axios.post(`${baseURL}/auth/login`, body, config)\r\n        .then(res => dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'));\r\n            dispatch({\r\n                type: LOGIN_FAIL\r\n            })\r\n        })\r\n}\r\n\r\nexport const tokenConfig = getState => {\r\n    //Get token from localstorage\r\n    const token = getState().auth.token;\r\n\r\n    //Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    }\r\n    //if token add to headers\r\n    if (token) {\r\n        config.headers['x-auth-token'] = token\r\n    }\r\n    return config;\r\n}","import {\n  Button,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n\n  Typography,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Menu } from \"@material-ui/icons\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { logout } from \"../../actions/authActions\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  linkText: {\n    textDecoration: `none`,\n    textTransform: `uppercase`,\n    color: `black`,\n  },\n  button: {\n    marginTop: 2,\n    marginBottom: 3,\n    marginLeft: 100,\n    // paddingTop: 10,\n    fontSize: 15,\n  },\n});\n\nconst SideDrawer = ({ navLinks }) => {\n  const classes = useStyles();\n  const authState = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  let history = useHistory();\n  const handleLogout = (e) => {\n    e.preventDefault();\n    dispatch(logout());\n  };\n  const handleMyurls = (e) => {\n    e.preventDefault();\n    history.push(\"/myurls\");\n  };\n\n  const handleHome = (e) => {\n    e.preventDefault();\n    history.push(\"/\");\n  };\n  const [state, setState] = useState({ right: false });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ [anchor]: open });\n  };\n\n  const sideDrawerList = (anchor) => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List component=\"nav\">\n        <ListItem button>\n          <Button onClick={handleHome} color=\"inherit\">\n            Home\n          </Button>\n        </ListItem>\n        <ListItem button>\n          <Button onClick={handleMyurls} color=\"inherit\">\n            MyUrls\n          </Button>\n        </ListItem>\n\n        {authState.isAuthenticated ? (\n          <ListItem button>\n            <Button onClick={handleLogout} color=\"inherit\">\n              Logout\n            </Button>\n          </ListItem>\n        ) : (\n          <ListItem button>\n            <Button href=\"/login\" color=\"inherit\">\n              SignIn\n            </Button>\n          </ListItem>\n        )}\n        <ListItem button>\n          <Button href=\"/register\" color=\"inherit\">\n            SignUp\n          </Button>\n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      {/* <Link href=\"/\"> */}\n      <Typography color=\"white\" variant=\"h3\">\n        TinyUrl\n      </Typography>\n      {/* </Link> */}\n      <IconButton\n        edge=\"start\"\n        aria-label=\"menu\"\n        onClick={toggleDrawer(\"left\", true)}\n      >\n        <Menu fontSize=\"large\" style={{ color: `white` }} />\n      </IconButton>\n\n      <Drawer\n        anchor=\"left\"\n        open={state.left}\n        onOpen={toggleDrawer(\"left\", true)}\n        onClose={toggleDrawer(\"left\", false)}\n      >\n        {sideDrawerList(\"left\")}\n      </Drawer>\n    </React.Fragment>\n  );\n};\n\nexport default SideDrawer;\n","import * as React from \"react\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Button,\r\n    Typography,\r\n    Hidden,\r\n    Container,\r\n    List,\r\n    Link\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../actions/authActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SideDrawer from \"./SideDrawer\";\r\n\r\nconst useStyles = makeStyles({\r\n    navbarDisplayFlex: {\r\n        display: `flex`,\r\n        justifyContent: `space-between`,\r\n    },\r\n    navDisplayFlex: {\r\n        display: `flex`,\r\n        justifyContent: `space-between`,\r\n    },\r\n    linkText: {\r\n        textDecoration: `none`,\r\n        textTransform: `uppercase`,\r\n        color: `white`,\r\n        paddingTop: 20,\r\n    },\r\n    linkLogo: {\r\n        paddingLeft: 10,\r\n        paddingTop: 2,\r\n    },\r\n    buttonLarge: {\r\n        marginTop: 3,\r\n        marginBottom: 4,\r\n        // marginLeft: 100,\r\n        marginRight: 10,\r\n        paddingTop: 8,\r\n        fontSize: 16,\r\n    },\r\n    buttonSmall: {\r\n        marginTop: 3,\r\n        marginBottom: 4,\r\n        // marginLeft: 10,\r\n        marginRight: 0,\r\n        paddingTop: 8,\r\n        fontSize: 14,\r\n    },\r\n    btn: {\r\n        // backgroundColor: \"white !important\",\r\n        color: \"white !important\",\r\n    },\r\n});\r\n\r\nconst guestLinks = [\r\n    { title: `home`, path: `/` },\r\n    { title: `about us`, path: `/about us` },\r\n    { title: `faq`, path: `/faq` },\r\n    { title: `disputes`, path: `/disputes` },\r\n];\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    const authState = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n    const handleLogout = (e) => {\r\n        e.preventDefault();\r\n        dispatch(logout());\r\n    };\r\n    const handleMyurls = (e) => {\r\n        e.preventDefault();\r\n        history.push(\"/myurls\");\r\n    };\r\n\r\n    const handleHome = (e) => {\r\n        history.push(\"/\");\r\n    };\r\n    return (\r\n        <AppBar position=\"sticky\" color=\"transparent\" elevation={0}>\r\n            <Toolbar>\r\n                <Container maxWidth=\"lg\" className={classes.navbarDisplayFlex}>\r\n                    <Hidden smDown>\r\n                        <List\r\n                            component=\"nav\"\r\n                            aria-labelledby=\"main navigation\"\r\n                            className={classes.navDisplayFlex}\r\n                        >\r\n                            <Link underline='none' href=\"/\">\r\n                                <Typography color=\"white\" variant=\"h3\">\r\n                                    TinyUrl\r\n                                </Typography>\r\n                            </Link>\r\n                            <Button\r\n                                className={classes.btn}\r\n                                onClick={handleHome}\r\n                                color=\"inherit\"\r\n                            >\r\n                                Home\r\n                            </Button>\r\n                            <Button\r\n                                className={classes.btn}\r\n                                onClick={handleMyurls}\r\n                                color=\"inherit\"\r\n                            >\r\n                                MyUrls\r\n                            </Button>\r\n\r\n                            {authState.isAuthenticated ? (\r\n                                <Button\r\n                                    className={classes.btn}\r\n                                    onClick={handleLogout}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    Logout\r\n                                </Button>\r\n                            ) : (\r\n                                <Button className={classes.btn} href=\"/login\" color=\"inherit\">\r\n                                    SignIn\r\n                                </Button>\r\n                            )}\r\n\r\n                            <Button className={classes.btn} href=\"/register\" color=\"inherit\">\r\n                                SignUp\r\n                            </Button>\r\n                        </List>\r\n                    </Hidden>\r\n                    <Hidden smUp>\r\n                        <List\r\n                            component=\"nav\"\r\n                            aria-labelledby=\"main navigation\"\r\n                            className={classes.navDisplayFlex}\r\n                        >\r\n                            <SideDrawer />\r\n                        </List>\r\n                    </Hidden>\r\n                </Container>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\n\r\n\r\nconst API = axios.create({ baseURL: \"https://urlshort-backend.herokuapp.com\" })\r\nexport const fetchUrl = () => API.get('/get');\r\nexport const createUrl = (newUrl) => API.post('/create', newUrl);\r\nexport const fetchUserUrls = (email) => API.post('/users', email)\r\n","import * as api from '../api';\r\nimport axios from \"axios\"\r\nimport { FETCH_USER_URLS,CLEAR_DATA } from './types';\r\nconst baseURL = \"https://urlshort-backend.herokuapp.com\"\r\n//action creators\r\nexport const getUrlPost = async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchUrl();\r\n        dispatch({ type: \"FETCH\", payload: data });\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const createUrl = (url) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createUrl(url);\r\n        dispatch({ type: 'CREATE', payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n//fetch user urls\r\n// export const getUserUrls = (email) => async (dispatch) => {\r\n//     try {\r\n//         const { data } = await api.fetchUserUrls(JSON.stringify(email));\r\n//         console.log({ data })\r\n//         dispatch({ type: 'FETCH_USER_URLS', payload: data });\r\n//     } catch (error) {\r\n//         console.log(error);\r\n//     }\r\n// }\r\n\r\nexport const getUserUrls = (email) => dispatch => {\r\n    //headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    //Request body\r\n    const body = { email };\r\n    axios.post(`${baseURL}/users`, body, config)\r\n        .then(res => dispatch({\r\n            type: FETCH_USER_URLS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const clearData = ()  => {\r\n    return {\r\n        type: CLEAR_DATA\r\n    };\r\n};\r\n\r\n\r\n\r\n","import * as React from 'react';\r\nimport { ListItemIcon, Box, MenuItem, Button, Menu } from '@mui/material';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n    FacebookShareButton,\r\n    WhatsappShareButton,\r\n    EmailShareButton,\r\n    WhatsappIcon,\r\n    EmailIcon,\r\n    FacebookIcon,\r\n    TwitterShareButton,\r\n    TwitterIcon,\r\n    LinkedinShareButton,\r\n    LinkedinIcon\r\n} from 'react-share';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Typography } from '@mui/material';\r\n\r\nexport default function BasicMenu() {\r\n    const urls = useSelector((state) => state.ur.urls);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <Box >\r\n            <Button\r\n                id=\"basic-button\"\r\n                aria-controls=\"basic-menu\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open ? 'true' : undefined}\r\n                onClick={handleClick}\r\n                variant='contained'\r\n                endIcon={<FontAwesomeIcon icon={faCaretDown} />}\r\n            >\r\n                Share\r\n            </Button>\r\n            <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                <MenuItem >\r\n                    <FacebookShareButton url={urls[0] ? urls[0].shortenedUrl : null}>\r\n                        <ListItemIcon >\r\n                            <Box display='flex' flexDirection='row'>\r\n                                <Box>\r\n                                    <FacebookIcon round={true} size={30} />\r\n                                </Box>\r\n                                <Box pb={1} pl={1}>\r\n                                    <Typography>Facebook</Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </ListItemIcon>\r\n                    </FacebookShareButton>\r\n                </MenuItem>\r\n\r\n                <MenuItem>\r\n                    <WhatsappShareButton url={urls[0] ? urls[0].shortenedUrl : null}>\r\n                        <ListItemIcon>\r\n                            <Box display='flex' flexDirection='row'>\r\n                                <Box>\r\n                                    <WhatsappIcon round={true} size={30} />\r\n                                </Box>\r\n                                <Box pb={1} pl={1}>\r\n                                    <Typography>WhatsApp</Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </ListItemIcon>        \r\n                    </WhatsappShareButton>\r\n                </MenuItem>\r\n\r\n                <MenuItem>\r\n                    <EmailShareButton url={urls[0] ? urls[0].shortenedUrl : null}>\r\n                        <ListItemIcon>\r\n                            <Box display='flex' flexDirection='row'>\r\n                                <Box>\r\n                                    <EmailIcon round={true} size={30} />\r\n                                </Box>\r\n                                <Box pb={1} pl={1}>\r\n                                    <Typography>Email</Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </ListItemIcon>\r\n                    </EmailShareButton>\r\n                </MenuItem>\r\n\r\n            \r\n                <MenuItem>\r\n                    <TwitterShareButton url={urls[0] ? urls[0].shortenedUrl : null}>\r\n                        <ListItemIcon>\r\n                            <Box display='flex' flexDirection='row'>\r\n                                <Box>\r\n                                    <TwitterIcon round={true} size={30} />\r\n                                </Box>\r\n                                <Box pb={1} pl={1}>\r\n                                    <Typography>Twitter</Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </ListItemIcon>\r\n                    </TwitterShareButton>\r\n                </MenuItem>\r\n\r\n\r\n                <MenuItem>\r\n                    <LinkedinShareButton url={urls[0] ? urls[0].shortenedUrl : null}>\r\n                        <ListItemIcon>\r\n                            <Box display='flex' flexDirection='row'>\r\n                                <Box>\r\n                                    <LinkedinIcon round={true} size={30} />\r\n                                </Box>\r\n                                <Box pb={1} pl={1}>\r\n                                    <Typography>LinkedIn</Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </ListItemIcon>\r\n                    </LinkedinShareButton>\r\n                </MenuItem>\r\n            </Menu>\r\n        </Box>\r\n    );\r\n}","import React from 'react'\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport ContentCopy from '@mui/icons-material/ContentCopy';\r\nimport { Button,  Container, Grid ,Link, Box } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faShare } from '@fortawesome/free-solid-svg-icons'\r\nimport QrCodeIcon from '@mui/icons-material/QrCode';\r\nimport BasicMenu from './shareMenu';\r\nimport QRcode from \"qrcode\";\r\nimport { useHistory } from 'react-router';\r\n\r\nconst ShareComponents = () => {\r\n    const urls = useSelector(state => state.ur.urls);\r\n    let history = useHistory();\r\n    const qrCode = (e) => {\r\n        if(urls[0]){\r\n            console.log(QRcode.toDataURL(urls[0].shortenedUrl));\r\n        }\r\n        \r\n    }\r\n\r\n    const myUrlSubmit = (e) => {\r\n        e.preventDefault()\r\n        history.push(\"/myurls\");\r\n    }\r\n\r\n    const shortenAnother = (e) => {\r\n        window.location.reload()\r\n    }\r\n    return (\r\n\r\n        <Box pb={1} pt={1}>\r\n            <Container maxWidth=\"sm\" >\r\n                <Grid container spacing={1} flexDirection='column' justifyContent='space-evenly'>\r\n                    <Box p={1}>\r\n                    <Grid container spacing={1} flexDirection='row' justifyContent='space-evenly' alignItems='center' >\r\n                        <Grid item xs>\r\n                            <Button component={Link} href={urls[0] ? urls[0].shortenedUrl : null} variant='contained' startIcon={<FontAwesomeIcon icon={faShare} />}>\r\n                                Visit\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                            <BasicMenu />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                            <CopyToClipboard text={urls[0] ? urls[0].shortenedUrl : null}>\r\n\r\n                                <Button variant='contained' onClick={(e) => { e.preventDefault() }} endIcon={<ContentCopy />}>\r\n                                    Copy\r\n                                </Button>\r\n\r\n                            </CopyToClipboard>\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                            <Button onClick={qrCode} variant='contained' endIcon={<QrCodeIcon />}>QR</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </Box>\r\n                    <Box p={1}>\r\n                    <Grid container spacing={1} justifyContent='space-evenly' alignItems='center'    >\r\n                        <Grid item xs>\r\n                            <Button onClick={myUrlSubmit} fullWidth variant='contained'>my urls</Button>\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                            <Button onClick={shortenAnother} fullWidth variant='contained'>shorten another</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </Box>\r\n               </Grid>\r\n                \r\n               \r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ShareComponents\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport {\r\n    TextField,\r\n    Button,\r\n    Typography,\r\n    Paper,\r\n    Box,\r\n    Link,\r\n    Container,\r\n    Grid,\r\n    MenuItem,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createUrl, getUserUrls } from \"../../actions/urlActions\";\r\nimport ShareComponents from \"../Share/ShareComponents\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { clearData } from \"./../../actions/urlActions\";\r\nimport validator from 'validator';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        borderRadius: \"20px !important\",\r\n    },\r\n    textField: {\r\n        display: \"block\",\r\n        height: \"23px\",\r\n        width: \"440px,\",\r\n        padding: \"17px 14px 17px 14px\",\r\n        minHeight: \"auto\",\r\n        border: \"1px solid #bebcbc\",\r\n        borderRadius: \"5px\",\r\n    },\r\n    formContainer: {\r\n        marginTop: \"20px\",\r\n    },\r\n    btn: {\r\n        borderRadius: \"10px !important\",\r\n        backgroundColor: \"#22A975 !important\",\r\n        height: \"60px\",\r\n        fontSize: \"20px !important\",\r\n        textTransform: \"capitalize !important\",\r\n        fontWeight: \"600 !important\",\r\n        cursor: \"pointer !important\",\r\n    },\r\n    btnAccount: {\r\n        backgroundColor: \"#0B82A6 !important\",\r\n    }\r\n\r\n});\r\n\r\nconst Form = () => {\r\n    const classes = useStyles();\r\n    const [postUrl, setPostUrl] = useState({\r\n        full: \"\",\r\n    });\r\n    const history = useHistory()\r\n    const [showUrl, setShowUrl] = useState(false);\r\n    const urls = useSelector((state) => state.ur.urls); //get url state\r\n    const authState = useSelector((state) => state.auth);\r\n    const isAuthenticatedState = authState.isAuthenticated;\r\n    const userUrls = useSelector((state) => state.userUrl);\r\n    const dispatch = useDispatch();\r\n\r\n    const createAccount = () => {\r\n        history.push('/register')\r\n    }\r\n\r\n    const textOnChange = (e) => {\r\n        isAuthenticatedState\r\n            ? setPostUrl({ full: e.target.value, ownedBy: authState.user.email })\r\n            : setPostUrl({ full: e.target.value });\r\n    };\r\n\r\n    const onHit = (e) => {\r\n        e.preventDefault();\r\n        setShowUrl(true);\r\n        dispatch(createUrl(postUrl));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (authState.isAuthenticated && authState.user !== null) {\r\n            dispatch(getUserUrls(authState.user.email));\r\n        } else {\r\n            dispatch(clearData(userUrls));\r\n        }\r\n    }, [urls, authState.isAuthenticated, dispatch]);\r\n\r\n    const aliases = [\r\n        {\r\n            value: \"tinyUrl\",\r\n            label: \"tinyurl.com\",\r\n        },\r\n        {\r\n            value: \"random\",\r\n            label: \"random.com\",\r\n        },\r\n    ];\r\n    console.log(postUrl);\r\n    return (\r\n        <Container className={classes.formContainer} maxWidth=\"lg\">\r\n            <Grid container spacing={3}>\r\n                <Grid item lg={6}>\r\n                    <Paper className={classes.paper} elevation={3}>\r\n                        <form>\r\n                            <Box p={3}>\r\n                                <Typography variant=\"h6\">\r\n                                    Enter a long URL to make a TinyURL\r\n                                </Typography>\r\n                            </Box>\r\n\r\n                            <Box pb={1} pl={3} pr={3}>\r\n                                <TextField\r\n                                    id=\"outlined-basic\"\r\n                                    label=\"url\"\r\n                                    type=\"text\"\r\n                                    variant=\"outlined\"\r\n                                    value={postUrl.full}\r\n                                    onChange={textOnChange}\r\n                                    fullWidth\r\n                                />\r\n                            </Box>\r\n\r\n                            {\r\n                                postUrl.full && !validator.isURL(postUrl.full) ?\r\n                                    <Box pl={3} pr={3}>\r\n\r\n                                        <Typography variant='h8' color='red'>\r\n                                            URL is not valid\r\n                                        </Typography>\r\n\r\n                                    </Box> : null\r\n                            }\r\n\r\n\r\n\r\n                            {!showUrl && (\r\n                                <>\r\n                                    <Box p={3}>\r\n                                        <Typography variant=\"h6\">Customize your link</Typography>\r\n                                    </Box>\r\n                                    <Grid container spacing={0}>\r\n                                        <Grid item>\r\n                                            <Box p={3}>\r\n                                                <TextField\r\n                                                    id=\"outlined-basic\"\r\n                                                    select\r\n                                                    variant=\"outlined\"\r\n                                                    value=\"tinyUrl\"\r\n                                                    disabled\r\n                                                    fullWidth\r\n                                                    placeholder=\"tiny\"\r\n                                                >\r\n                                                    {aliases.map((option) => (\r\n                                                        <MenuItem key={option.value} value={option.value}>\r\n                                                            {option.label}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </TextField>\r\n                                            </Box>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Box p={3}>\r\n                                                <TextField\r\n                                                    id=\"outlined-basic\"\r\n                                                    label=\"alias\"\r\n                                                    type=\"text\"\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    disabled\r\n                                                />\r\n                                            </Box>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                   \r\n                                </>\r\n                            )}\r\n                            {showUrl && (\r\n                                <>\r\n                                    <Box pb={0} pt={1} pl={3}>\r\n                                        <Typography variant=\"h6\">Tiny Url</Typography>\r\n                                    </Box>\r\n                                    <Box p={2}>\r\n                                        <div className={classes.textField}>\r\n\r\n                                            <Typography variant=\"h8\">\r\n                                                {urls[0] ? (\r\n                                                    <Link href={urls[0].shortenedUrl}>\r\n                                                        {urls[0].shortenedUrl}\r\n                                                    </Link>\r\n                                                ) : null}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </Box>\r\n                                </>\r\n                            )}\r\n\r\n                            {!showUrl?\r\n                               <Box p={3}>\r\n                                    <Button\r\n                                        className={classes.btn}\r\n                                        variant=\"contained\"\r\n                                        onClick={onHit}\r\n                                        fullWidth\r\n                                        disabled={!validator.isURL(postUrl.full)}\r\n                                    //   color=\"#ffffff\"\r\n                                    >\r\n                                        Make TinyURL\r\n                                    </Button>\r\n                                </Box>:<ShareComponents/>\r\n                            }\r\n\r\n                        </form>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item lg={6}>\r\n                    <Box p={3}>\r\n                        <Typography variant=\"h5\" color=\"white\">\r\n                            Welcome to TinyURL!\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box p={3}>\r\n                        <Typography variant=\"h6\" color=\"white\">\r\n                            Create a free account today\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box p={3}>\r\n                       \r\n                        <Button onClick={createAccount} classes={classes.btnAccount} variant=\"contained\">\r\n                                Create Free Account\r\n                            </Button>\r\n                    \r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Typography, Paper, Box, Alert,Container,Grid } from \"@mui/material\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { register } from \"../../actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getUserUrls } from \"../../actions/urlActions\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        borderRadius: \"20px !important\",\r\n    },\r\n    formContainer: {\r\n        marginTop: \"20px\",\r\n    }\r\n})\r\nconst RegisterUser = () => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [msg, setMsg] = useState(null);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    \r\n    const authState = useSelector(state => state.auth)\r\n    const errState = useSelector(state => state.err)\r\n\r\n    useEffect(() => {\r\n        if (errState.id === 'REGISTER_FAIL') {\r\n            setMsg(errState.msg.msg)\r\n        } else {\r\n            setMsg(null)\r\n            \r\n        }\r\n        if (authState.isAuthenticated && authState.user!==null) {\r\n            console.log(authState.user.email)\r\n\r\n            dispatch(getUserUrls(authState.user.email))\r\n        }\r\n        // }\r\n    }, [authState.isAuthenticated,errState.id])\r\n    if (authState.isAuthenticated) {\r\n        dispatch(getUserUrls(authState.user.email))\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    const handleChangeName = (e) => setName(e.target.value);\r\n    const handleChangeEmail = (e) => setEmail(e.target.value);\r\n    const handleChangePassword = (e) => setPassword(e.target.value);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        // Create user object\r\n        const user = {\r\n            name,\r\n            email,\r\n            password\r\n        };\r\n       \r\n        // register\r\n        dispatch(register(user));\r\n        // dispatch(getUserUrls(authState.user.url))\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <Container className={classes.formContainer} maxWidth=\"lg\">\r\n            <Grid container spacing={3}>\r\n            <Grid item lg={6}>\r\n                <Paper className={classes.paper}>\r\n                    {msg ? <Alert severity=\"warning\">{msg}</Alert> : null}\r\n                    <form>\r\n                        <Box p={2}>\r\n                            <Typography >\r\n                                Name\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box p={2}>\r\n                            <TextField\r\n                                type='text'\r\n                                id=\"outlined-basic\"\r\n                                label='Name'\r\n                                variant=\"outlined\"\r\n                                onChange={handleChangeName}\r\n                                fullWidth\r\n                            />\r\n                        </Box>\r\n                        <Box p={2}>\r\n                            <Typography >\r\n                               Email\r\n                            </Typography>\r\n                        </Box>\r\n\r\n                        <Box p={2}>\r\n\r\n                            <TextField\r\n                                type='text'\r\n                                id=\"outlined-basic\"\r\n                                label='Email'\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChangeEmail}\r\n                            />\r\n                        </Box>\r\n                        <Box p={2}>\r\n                            <Typography >\r\n                              Password\r\n                            </Typography>\r\n                        </Box>\r\n\r\n                        <Box p={2}>\r\n\r\n                            <TextField\r\n                                type='password'\r\n                                id=\"outlined-basic\"\r\n                                label='password'\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChangePassword}\r\n                            />\r\n                        </Box>\r\n\r\n                        <Box p={2}>\r\n                            <Button onClick={onSubmit} variant=\"contained\" >\r\n                                Log In\r\n                            </Button>\r\n\r\n                        </Box>\r\n                    </form>\r\n                </Paper>\r\n            </Grid>\r\n            </Grid>\r\n        </Container>\r\n        \r\n    );\r\n}\r\n\r\nexport default RegisterUser\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Typography, Paper, Box, Alert, Container, Grid } from \"@mui/material\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LogIn } from \"../../actions/authActions\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { getUserUrls } from \"../../actions/urlActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        borderRadius: \"20px !important\",\r\n    },\r\n    formContainer: {\r\n        marginTop: \"20px\",\r\n    }\r\n})\r\nconst LoggedInUser = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [msg, setMsg] = useState(null);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const authState = useSelector(state => state.auth)\r\n\r\n    const errState = useSelector(state => state.err)\r\n\r\n    useEffect(() => {\r\n        if (errState.id === 'LOGIN_FAIL') {\r\n            setMsg(errState.msg.msg)\r\n        } else {\r\n            setMsg(null)\r\n        }\r\n\r\n        if (authState.isAuthenticated) {\r\n            dispatch(getUserUrls(authState.user.email))\r\n        }\r\n    }, [authState.isAuthenticated, errState.id])\r\n\r\n    if (authState.isAuthenticated) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    const handleChangeEmail = (e) => setEmail(e.target.value);\r\n    const handleChangePassword = (e) => setPassword(e.target.value);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const user = { email, password }\r\n        dispatch(LogIn(user))//attempt to login\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Container className={classes.formContainer} maxWidth=\"lg\" >\r\n            <Grid container spacing={3}>\r\n                <Grid item lg={6}>\r\n                    <Paper className={classes.paper}>\r\n                        {msg ? <Alert severity=\"warning\">{msg}</Alert> : null}\r\n                        <form>\r\n                            <Box p={2}>\r\n                                <Typography >\r\n                                    Email\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box p={2}>\r\n                                <TextField\r\n                                    type='text'\r\n                                    id=\"outlined-basic\"\r\n                                    label='Email'\r\n                                    variant=\"outlined\"\r\n                                    onChange={handleChangeEmail}\r\n                                    fullWidth\r\n                                />\r\n                            </Box>\r\n                            <Box p={2}>\r\n                                <Typography >\r\n                                    Password\r\n                                </Typography>\r\n                            </Box>\r\n\r\n                            <Box p={2}>\r\n\r\n                                <TextField\r\n                                    type='password'\r\n                                    id=\"outlined-basic\"\r\n                                    label='password'\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={handleChangePassword}\r\n                                />\r\n                            </Box>\r\n\r\n                            <Box p={2}>\r\n                                <Button onClick={onSubmit} variant=\"contained\" >\r\n                                    Log In\r\n                                </Button>\r\n\r\n                            </Box>\r\n                        </form>\r\n                    </Paper>\r\n                    \r\n                </Grid>\r\n           </Grid>\r\n        </Container>\r\n        \r\n    );\r\n}\r\n\r\nexport default LoggedInUser\r\n","import React, { useEffect, useState, useRef, memo} from 'react'\r\nimport {\r\n    Typography,\r\n    Paper,\r\n    Link,\r\n    Container,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n} from \"@mui/material\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { tableCellClasses } from '@mui/material/TableCell';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { clearData, getUserUrls } from './../../actions/urlActions';\r\n\r\nconst useStyles = makeStyles({\r\n    padding: {\r\n        paddingTop: '20px'\r\n    }\r\n});\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 14,\r\n    },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0,\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst MemoisedMyUrls = memo(function MyUrls(){\r\n    const dispatch = useDispatch()\r\n    const authState = useSelector(state => state.auth)\r\n    const userUrls = useSelector(state => state.userUrl.userUrls)\r\n    useEffect(() => {\r\n        if (authState.isAuthenticated && authState.user !== null) {\r\n            dispatch(getUserUrls(authState.user.email))\r\n        } else {\r\n            dispatch(clearData(userUrls))\r\n        }\r\n    }, [authState.isAuthenticated, userUrls])\r\n\r\n\r\n\r\n    const classes = useStyles()\r\n    return (\r\n     \r\n        <Container>\r\n\r\n            {authState.isAuthenticated && userUrls[0] ? <div className={classes.padding}><TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 200 }} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell align='center'>ShortenedUrl</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Clicks</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">User</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {userUrls[0].map((i, j) => (\r\n                            <StyledTableRow key={j}>\r\n                                <StyledTableCell align=\"center\"><Link href={i.shortenedUrl}>{i.shortenedUrl}</Link></StyledTableCell>\r\n                                <StyledTableCell align=\"center\">{i.clicks}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\">{i.ownedBy}</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer></div> : <Redirect to='/login'/>}\r\n        </Container>\r\n\r\n    )\r\n})\r\n\r\nexport default MemoisedMyUrls;\r\n\r\n","export default __webpack_public_path__ + \"static/media/blob-bg.4c03d844.jpg\";","import React, { useEffect } from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport { getUrlPost } from \"../../actions/urlActions\";\r\nimport Form from \"../Form/Form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport RegisterUser from \"../Auth/RegisterUser\";\r\nimport LoggedInUser from \"../Auth/LoggedInUser\";\r\nimport MyUrls from \"./../MyUrls/myUrls\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport background from \"../../images/blob-bg.jpg\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n    return {\r\n        bg: {\r\n            backgroundImage: `url(${background})`,\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundSize: \"cover\",\r\n            height: \"100vh\",\r\n            [theme.breakpoints.down('md')]: {\r\n                height: '120vh'\r\n            },\r\n            [theme.breakpoints.down('xs')]: {\r\n                height: '170vh'\r\n            },\r\n            // [theme.breakpoints.up('sm')]: {\r\n            //     height: '110vh'\r\n            // }\r\n        },\r\n    }\r\n});\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        dispatch(getUrlPost);\r\n    }, [dispatch]);\r\n    // const theme = useTheme();\r\n    // const matches = useMediaQuery(theme.breakpoints.down('md'));\r\n    // console.log(matches)\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={classes.bg} >\r\n                <Header />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Form} />\r\n                    <Route path=\"/register\" exact component={RegisterUser} />\r\n                    <Route path=\"/login\" exact component={LoggedInUser} />\r\n                    <Route path=\"/myurls\" exact component={MyUrls} />\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","const initialState = {\r\n    urls: [],\r\n    \r\n}\r\n\r\nexport default function urlState(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'FETCH':\r\n            return {\r\n                ...state, urls: action.payload\r\n            };\r\n        case 'CREATE':\r\n            return {\r\n                ...state,\r\n                urls: [action.payload]\r\n            };\r\n        // case 'FETCH_USER_URLS':\r\n        //     return {\r\n        //         ...state, userUrls: [action.payload]\r\n        //     };\r\n        default:\r\n            return state;\r\n        \r\n        // default:\r\n        //     return state;\r\n    }\r\n}","import { GET_ERRORS,CLEAR_ERRORS } from './../actions/types';\r\n\r\nconst initialState ={\r\n    msg:{},\r\n    status:null,\r\n    id:null\r\n}\r\n\r\nexport default function errorState (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return {\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n                id: action.payload.id\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg: {},\r\n                status: null,\r\n                id: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: localStorage.getItem('token') ? true : false,\r\n    isLoading: false,\r\n    user: null\r\n};\r\n\r\nexport default function authState(state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload\r\n            };\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                isLoading: false\r\n            };\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS:     \r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    userUrls: []\r\n}\r\n\r\nexport default function userUrlState(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'FETCH_USER_URLS':\r\n            return {\r\n                ...state, userUrls: [action.payload]\r\n            };\r\n        case 'CLEAR_DATA':\r\n            return {\r\n                ...state, userUrls: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport urlState from './urlReducer';\r\nimport errorState from './errorReducer';\r\nimport authState from './authReducer';\r\nimport userUrlState from './userurlReducer';\r\n\r\nconst persistConfig ={\r\n    key:'root',\r\n    storage,\r\n    whitelist:['userUrl']\r\n}\r\nconst rootReducer = combineReducers({\r\n    ur: urlState,\r\n    err:errorState,\r\n    auth:authState,\r\n    userUrl:userUrlState\r\n})\r\n// export default combineReducers({ \r\n//     ur:urlState,\r\n//     err:errorState,\r\n//     auth:authState,\r\n//     userUrl:userUrlState \r\n// })\r\n\r\nexport default persistReducer(persistConfig,rootReducer);\r\n","import React, { useEffect } from 'react';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport Home from './Components/Home/Home';\nimport { Provider, } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { loadUser } from './actions/authActions';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\nconst persistor = persistStore(store)\n\nconst App = () => {\n\n  useEffect(() => {\n    store.dispatch(loadUser())\n  })\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <Home />\n      </PersistGate>\n    </Provider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}