{"version":3,"sources":["actions/types.js","actions/errorActions.js","Components/Header/Header.js","actions/authActions.js","api/index.js","actions/urlActions.js","Components/Share/ShareComponents.js","Components/Form/Form.js","Components/Auth/RegisterUser.js","Components/Auth/LoggedInUser.js","Components/MyUrls/myUrls.js","Components/Home/Home.js","reducers/urlReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/userurlReducer.js","reducers/index.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","GET_ERRORS","CLEAR_ERRORS","returnErrors","msg","status","id","type","payload","Header","authState","useSelector","state","auth","dispatch","useDispatch","history","useHistory","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","component","Button","onClick","e","preventDefault","push","color","isAuthenticated","href","API","axios","create","baseURL","getUrlPost","a","get","data","console","log","getUserUrls","email","body","post","headers","then","res","catch","err","ShareComponents","urls","ur","display","flexDirection","p","text","shortenedUrl","size","FacebookShareButton","url","FacebookIcon","round","EmailShareButton","EmailIcon","WhatsappShareButton","WhatsappIcon","Form","useState","full","postUrl","setPostUrl","isAuthenticatedState","flexWrap","m","width","height","Paper","elevation","TextField","label","value","onChange","target","ownedBy","user","fullWidth","className","Link","newUrl","RegisterUser","name","setName","setEmail","password","setPassword","setMsg","errState","useEffect","to","Alert","severity","JSON","stringify","response","register","LoggedInUser","LogIn","StyledTableCell","styled","TableCell","theme","tableCellClasses","head","backgroundColor","palette","common","black","white","fontSize","StyledTableRow","TableRow","action","hover","border","MyUrls","userUrls","userUrl","setData","Container","TableContainer","Table","minWidth","TableHead","align","TableBody","map","i","j","clicks","Home","exact","path","initialState","token","localStorage","getItem","isLoading","persistConfig","key","storage","whitelist","rootReducer","combineReducers","setItem","removeItem","persistReducer","store","createStore","reducers","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.618add7c.chunk.js","sourcesContent":["export const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const FETCH_USER_URLS = \"FETCH_USER_URLS\"","import { GET_ERRORS,CLEAR_ERRORS } from \"./types\";\r\n\r\n//Return errors\r\n\r\nexport const returnErrors = (msg, status, id) => {\r\n    return{\r\n       type:GET_ERRORS,\r\n       payload:{\r\n           msg,status,id\r\n       } \r\n    }\r\n}\r\n\r\n//CLEAR ERRORS\r\nexport const clearErrors = () => {\r\n    return{\r\n        type:CLEAR_ERRORS\r\n    };\r\n};","import * as React from 'react';\r\nimport { AppBar, Toolbar, Button, Box, Typography, Link } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../../actions/authActions';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Header = () => {\r\n    const authState = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n    let history = useHistory();\r\n    const handleLogout = (e) => {\r\n        e.preventDefault();\r\n        dispatch(logout())\r\n    }\r\n    const handleMyurls = (e) => {\r\n        e.preventDefault();\r\n        history.push(\"/myurls\")\r\n    }\r\n\r\n    const handleHome = (e) => {\r\n        e.preventDefault();\r\n        history.push('/')\r\n    }\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position='static'>\r\n                <Toolbar>\r\n\r\n                    <Typography variant=\"h3\" component=\"div\" sx={{ flexGrow: 1 }} >\r\n                        TinyUrl\r\n                    </Typography >\r\n\r\n                    <Button onClick={handleHome} color=\"inherit\">Home</Button>  \r\n                    <Button onClick={handleMyurls} color=\"inherit\">MyUrls</Button>\r\n                    \r\n                    {authState.isAuthenticated ? (<Button onClick={handleLogout} color=\"inherit\">Logout</Button>) : (<Button href=\"/login\" color=\"inherit\">SignIn</Button>)}\r\n\r\n\r\n                    <Button href=\"/register\" color=\"inherit\">SignUp</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios';\r\nimport { returnErrors } from './errorActions';\r\nimport {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL\r\n} from './types';\r\n\r\n\r\n//check token and load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    // User loading\r\n    dispatch({ type: USER_LOADING });\r\n\r\n\r\n\r\n    axios.get('/auth/getuser', tokenConfig(getState))\r\n        .then(res => dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status));\r\n            dispatch({\r\n                type: AUTH_ERROR\r\n            })\r\n        })\r\n}\r\n//register users\r\nexport const register = ({ name, email, password }) => dispatch => {\r\n    //headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    //Request body\r\n    const body = JSON.stringify({ name, email, password });\r\n    axios.post('/user', body, config)\r\n        .then(res => dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\r\n            dispatch({\r\n                type: REGISTER_FAIL\r\n            })\r\n        })\r\n}\r\n\r\n//LogOut User\r\nexport const logout = () => {\r\n    return {\r\n        type: LOGOUT_SUCCESS\r\n    }\r\n}\r\n\r\n//Login Users\r\nexport const LogIn = ({ email, password }) => dispatch => {\r\n    //headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    //Request body\r\n    const body = JSON.stringify({ email, password });\r\n    axios.post('/auth/login', body, config)\r\n        .then(res => dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'));\r\n            dispatch({\r\n                type: LOGIN_FAIL\r\n            })\r\n        })\r\n}\r\n\r\nexport const tokenConfig = getState => {\r\n    //Get token from localstorage\r\n    const token = getState().auth.token;\r\n\r\n    //Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        }\r\n    }\r\n    //if token add to headers\r\n    if (token) {\r\n        config.headers['x-auth-token'] = token\r\n    }\r\n    return config;\r\n}","import axios from 'axios';\r\n\r\n\r\nconst API = axios.create({ baseURL: 'https://tinyurl-mern.herokuapp.com' })\r\n\r\nexport const fetchUrl = () => API.get('/get');\r\nexport const createUrl = (newUrl) => API.post('/create', newUrl);\r\nexport const fetchUserUrls = (email) => API.post('/users', email)\r\n","import * as api from '../api';\r\nimport axios from \"axios\"\r\nimport { FETCH_USER_URLS } from './types';\r\n\r\n//action creators\r\nexport const getUrlPost = async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchUrl();\r\n        dispatch({ type: \"FETCH\", payload: data });\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const createUrl = (url) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createUrl(url);\r\n        dispatch({ type: 'CREATE', payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n//fetch user urls\r\n// export const getUserUrls = (email) => async (dispatch) => {\r\n//     try {\r\n//         const { data } = await api.fetchUserUrls(JSON.stringify(email));\r\n//         console.log({ data })\r\n//         dispatch({ type: 'FETCH_USER_URLS', payload: data });\r\n//     } catch (error) {\r\n//         console.log(error);\r\n//     }\r\n// }\r\n\r\nexport const getUserUrls = (email) => dispatch => {\r\n    //headers\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    //Request body\r\n    const body = { email };\r\n    axios.post('/users', body, config)\r\n        .then(res => dispatch({\r\n            type: FETCH_USER_URLS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\n\r\n","import React from 'react'\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport ClipboardIcon from 'react-clipboard-icon'\r\nimport { Button, Typography, Box, } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { \r\n     FacebookShareButton,\r\n     WhatsappShareButton,\r\n     EmailShareButton,\r\n     WhatsappIcon,\r\n     EmailIcon,\r\n     FacebookIcon\r\n    } from 'react-share'; \r\nconst ShareComponents = () => {\r\n    const urls = useSelector(state=>state.ur.urls);\r\n\r\n    return (\r\n        <Box display='flex' flexDirection='row'>\r\n            <Box p={2}>\r\n                <CopyToClipboard text={urls[0]?urls[0].shortenedUrl:null}>\r\n                    <ClipboardIcon size={60}>\r\n                        <Button onClick={(e)=>{e.preventDefault()}}>\r\n                            Copy\r\n                        </Button>\r\n                    </ClipboardIcon>\r\n                </CopyToClipboard>\r\n            </Box>\r\n\r\n            <Box p={2}>\r\n                <FacebookShareButton url={urls[0] ? urls[0].shortenedUrl : null}>\r\n                    <FacebookIcon round={true}/> \r\n                </FacebookShareButton>\r\n            </Box>\r\n\r\n            <Box p={2}>\r\n                <EmailShareButton url={urls[0] ? urls[0].shortenedUrl : null}>\r\n                    <EmailIcon round={true}/>\r\n                </EmailShareButton>\r\n            </Box>\r\n\r\n            <Box p={2}>\r\n                <WhatsappShareButton url={urls[0] ? urls[0].shortenedUrl : null}>\r\n                    <WhatsappIcon round={true} />\r\n                </WhatsappShareButton>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ShareComponents\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Typography, Paper, Box, Link } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createUrl } from \"../../actions/urlActions\";\r\nimport ShareComponents from \"../Share/ShareComponents\";\r\nimport './Form.css'\r\n\r\nconst Form = () => {\r\n    const [postUrl, setPostUrl] = useState({\r\n        full: \"\",\r\n    });\r\n    const urls = useSelector(state => state.ur.urls);//get url state\r\n    const authState = useSelector(state => state.auth)\r\n    const isAuthenticatedState = authState.isAuthenticated\r\n    const dispatch = useDispatch();\r\n\r\n    const textOnChange = (e) => {\r\n        isAuthenticatedState ? setPostUrl({ full: e.target.value, ownedBy: authState.user.email }) : setPostUrl({ full: e.target.value });\r\n    };\r\n\r\n    const onHit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createUrl(postUrl));\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                flexWrap: \"wrap\",\r\n                \"& > :not(style)\": {\r\n                    m: 1,\r\n                    width: 500,\r\n                    height: 550,\r\n                },\r\n            }}\r\n        >\r\n            <Paper elevation={3}>\r\n                <form>\r\n                    <Box p={2}>\r\n                        <Typography variant=\"h6\" >\r\n                            Enter a long URL to make a TinyURL\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Box p={2}>\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            label='url'\r\n                            type='text'\r\n                            variant=\"outlined\"\r\n                            value={postUrl.full}\r\n                            onChange={textOnChange}\r\n                            fullWidth\r\n                        />\r\n                    </Box>\r\n                    <Box p={2}>\r\n\r\n                        <Typography variant=\"h6\">\r\n                            Tiny Url\r\n                        </Typography>\r\n\r\n\r\n                    </Box>\r\n\r\n                    <Box p={2}>\r\n\r\n                        <div className='textField'>\r\n\r\n                            <Typography variant='h6'>\r\n                                {urls[0] ?\r\n                                    <Link href={urls[0].shortenedUrl}>\r\n                                        {urls[0].shortenedUrl}\r\n                                    </Link> : null\r\n                                }\r\n                            </Typography>\r\n                        </div>\r\n                    </Box>\r\n\r\n                    <Box p={2}>\r\n                        <Typography variant=\"h6\">\r\n                            Share\r\n                        </Typography>\r\n                        <ShareComponents />\r\n                    </Box>\r\n                    <Box p={2}>\r\n                        <Button variant=\"contained\" onClick={onHit}>\r\n                            Make TinyURL\r\n                        </Button>\r\n\r\n\r\n\r\n                    </Box>\r\n                </form>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Typography, Paper, Box, Alert } from \"@mui/material\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { register } from \"../../actions/authActions\";\r\nimport { clearErrors } from \"../../actions/errorActions\";\r\nimport { logout } from \"../../actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getUserUrls } from \"../../actions/urlActions\";\r\nimport { createUrl } from \"../../actions/urlActions\";\r\n\r\n\r\nconst RegisterUser = () => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [msg, setMsg] = useState(null);\r\n    const [url,setUrl] = useState({\r\n        full: \"\",\r\n    })\r\n    const dispatch = useDispatch();\r\n\r\n    const authState = useSelector(state => state.auth)\r\n    const errState = useSelector(state => state.err)\r\n\r\n    useEffect(() => {\r\n        if (errState.id === 'REGISTER_FAIL') {\r\n            setMsg(errState.msg.msg)\r\n        } else {\r\n            setMsg(null)\r\n        }\r\n\r\n        if (authState.isAuthenticated) {\r\n            console.log(authState.user.email);\r\n            \r\n            \r\n        }\r\n    }, [authState])\r\n    if (authState.isAuthenticated) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    const handleChangeName = (e) => setName(e.target.value);\r\n    const handleChangeEmail = (e) => setEmail(e.target.value);\r\n    const handleChangePassword = (e) => setPassword(e.target.value);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // Create user object\r\n        const user = {\r\n            name,\r\n            email,\r\n            password\r\n        };\r\n\r\n        // Attempt to login\r\n        dispatch(register(user));\r\n        if(authState.isAuthenticated){\r\n            dispatch(getUserUrls(authState.user.email))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                flexWrap: \"wrap\",\r\n                \"& > :not(style)\": {\r\n                    m: 1,\r\n                    width: 500,\r\n                    height: 500,\r\n                },\r\n            }}\r\n        >\r\n            <Paper elevation={3}>\r\n                {msg ? <Alert severity=\"warning\">{msg}</Alert> : null}\r\n                <form>\r\n                    <Box p={2}>\r\n                        <Typography >\r\n                            Name\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Box p={2}>\r\n                        <TextField\r\n                            type='text'\r\n                            id=\"outlined-basic\"\r\n                            label='Name'\r\n                            variant=\"outlined\"\r\n                            onChange={handleChangeName}\r\n                        />\r\n                    </Box>\r\n\r\n                    <Box p={2}>\r\n                        <Typography >\r\n                            Email\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Box p={2}>\r\n                        <TextField\r\n                            type='text'\r\n                            id=\"outlined-basic\"\r\n                            label='Email'\r\n                            variant=\"outlined\"\r\n                            onChange={handleChangeEmail}\r\n                        />\r\n                    </Box>\r\n                    <Box p={2}>\r\n                        <Typography >\r\n                            Password\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Box p={2}>\r\n\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            type='password'\r\n                            label='password'\r\n                            variant=\"outlined\"\r\n                            onChange={handleChangePassword}\r\n                        />\r\n\r\n\r\n\r\n                    </Box>\r\n\r\n                    <Box p={2}>\r\n                        <Button onClick={onSubmit} variant=\"contained\" >\r\n                            SignUp\r\n                        </Button>\r\n                        \r\n                    </Box>\r\n                </form>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default RegisterUser\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button, Typography, Paper, Box, Alert } from \"@mui/material\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LogIn } from \"../../actions/authActions\";\r\nimport { clearErrors } from \"../../actions/errorActions\";\r\nimport { logout } from \"../../actions/authActions\";\r\nimport { getUserUrls } from \"../../actions/urlActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst LoggedInUser = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [msg, setMsg] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const authState = useSelector(state => state.auth)\r\n\r\n    const errState = useSelector(state => state.err)\r\n\r\n    useEffect(() => {\r\n        if (errState.id === 'LOGIN_FAIL') {\r\n            setMsg(errState.msg.msg)\r\n        } else {\r\n            setMsg(null)\r\n        }\r\n\r\n        if (authState.isAuthenticated) {\r\n            console.log(authState.user.email)\r\n\r\n            dispatch(getUserUrls(authState.user.email))\r\n        }\r\n    }, [authState])\r\n\r\n    if (authState.isAuthenticated) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    const handleChangeEmail = (e) => setEmail(e.target.value);\r\n    const handleChangePassword = (e) => setPassword(e.target.value);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const user = { email, password }\r\n        dispatch(LogIn(user))//attempt to login\r\n\r\n    }\r\n\r\n    // const onLogOut = e => {\r\n    //     dispatch(logout())\r\n    // }\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                flexWrap: \"wrap\",\r\n                \"& > :not(style)\": {\r\n                    m: 1,\r\n                    width: 500,\r\n                    height: 500,\r\n                },\r\n            }}\r\n        >\r\n            <Paper elevation={3}>\r\n                {msg ? <Alert severity=\"warning\">{msg}</Alert> : null}\r\n                <form>\r\n\r\n                    <Box p={2}>\r\n                        <Typography >\r\n                            Email\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Box p={2}>\r\n                        <TextField\r\n                            type='text'\r\n                            id=\"outlined-basic\"\r\n                            label='Email'\r\n                            variant=\"outlined\"\r\n                            onChange={handleChangeEmail}\r\n                        />\r\n                    </Box>\r\n                    <Box p={2}>\r\n                        <Typography >\r\n                            Password\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Box p={2}>\r\n\r\n                        <TextField\r\n                            type='password'\r\n                            id=\"outlined-basic\"\r\n                            label='password'\r\n                            variant=\"outlined\"\r\n                            onChange={handleChangePassword}\r\n                        />\r\n                    </Box>\r\n\r\n                    <Box p={2}>\r\n                        <Button onClick={onSubmit} variant=\"contained\" >\r\n                            Log In\r\n                        </Button>\r\n\r\n                    </Box>\r\n                </form>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LoggedInUser\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    Typography,\r\n    Paper,\r\n    Link,\r\n    Container,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow\r\n} from \"@mui/material\";\r\nimport { tableCellClasses } from '@mui/material/TableCell';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    [`&.${tableCellClasses.body}`]: {\r\n        fontSize: 14,\r\n    },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n    '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n    },\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0,\r\n    },\r\n}));\r\n\r\n\r\nconst MyUrls = () => {\r\n    const authState = useSelector(state => state.auth)\r\n    const userUrls = useSelector(state => state.userUrl.userUrls)\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (authState.isAuthenticated) {\r\n            setData(userUrls)\r\n            console.log(data)\r\n        } else {\r\n            console.log(\"error\")\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n\r\n            {authState.isAuthenticated && data[0] ?<TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 200 }} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell align='center'>ShortenedUrl</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Clicks</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">User</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {data[0].map((i,j) => (\r\n                            <StyledTableRow key={j}>\r\n                                <StyledTableCell align=\"center\"><Link href={ i.shortenedUrl }>{i.shortenedUrl}</Link></StyledTableCell>\r\n                                <StyledTableCell align=\"center\">{i.clicks}</StyledTableCell>\r\n                                <StyledTableCell align=\"center\">{i.ownedBy}</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer> : <Typography variant='h5'><Link href='/login'>Please Log In</Link></Typography>}\r\n        </Container>\r\n        \r\n    )\r\n}\r\n\r\nexport default MyUrls\r\n\r\n","import React, { useEffect } from 'react';\r\nimport Header from '../Header/Header';\r\nimport { getUrlPost, getUserUrls } from '../../actions/urlActions'\r\nimport Form from '../Form/Form'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport RegisterUser from '../Auth/RegisterUser';\r\nimport LoggedInUser from '../Auth/LoggedInUser';\r\nimport MyUrls from './../MyUrls/myUrls';\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const authState = useSelector(state => state.auth)\r\n    const isAuthenticatedState = authState.isAuthenticated\r\n    console.log({ isAuthenticatedState })\r\n\r\n    useEffect(() => {\r\n        dispatch(getUrlPost);\r\n\r\n    }, [dispatch]);\r\n    return (\r\n        <BrowserRouter>\r\n            <Header />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Form} />\r\n                <Route path='/register' exact component={RegisterUser} />\r\n                <Route path='/login' exact component={LoggedInUser} />\r\n                <Route path='/myurls' exact component={MyUrls} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Home\r\n","const initialState = {\r\n    urls: [],\r\n    \r\n}\r\n\r\nexport default function urlState(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'FETCH':\r\n            return {\r\n                ...state, urls: action.payload\r\n            };\r\n        case 'CREATE':\r\n            return {\r\n                ...state,\r\n                urls: [action.payload]\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_ERRORS,CLEAR_ERRORS } from './../actions/types';\r\n\r\nconst initialState ={\r\n    msg:{},\r\n    status:null,\r\n    id:null\r\n}\r\n\r\nexport default function errorState (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return {\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n                id: action.payload.id\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg: {},\r\n                status: null,\r\n                id: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: localStorage.getItem('token') ? true : false,\r\n    isLoading: false,\r\n    user: null\r\n};\r\n\r\nexport default function authState(state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload\r\n            };\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                isLoading: false\r\n            };\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCCESS: \r\n        case REGISTER_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    userUrls: []\r\n}\r\n\r\nexport default function userUrlState(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'FETCH_USER_URLS':\r\n            return {\r\n                ...state, userUrls: [action.payload]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport urlState from './urlReducer';\r\nimport errorState from './errorReducer';\r\nimport authState from './authReducer';\r\nimport userUrlState from './userurlReducer';\r\n\r\nconst persistConfig ={\r\n    key:'root',\r\n    storage,\r\n    whitelist:['userUrl']\r\n}\r\nconst rootReducer = combineReducers({\r\n    ur: urlState,\r\n    err:errorState,\r\n    auth:authState,\r\n    userUrl:userUrlState\r\n})\r\n// export default combineReducers({ \r\n//     ur:urlState,\r\n//     err:errorState,\r\n//     auth:authState,\r\n//     userUrl:userUrlState \r\n// })\r\n\r\nexport default persistReducer(persistConfig,rootReducer);\r\n","import React from 'react';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport Home from './Components/Home/Home';\nimport { Provider, } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport { PersistGate } from 'redux-persist/integration/react';\n// import { loadUser } from './actions/authActions';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\nconst persistor = persistStore(store)\n\nconst App = () => {\n\n  // useEffect(() => {\n  //   store.dispatch(loadUser())\n  // })\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <Home />\n      </PersistGate>\n    </Provider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}